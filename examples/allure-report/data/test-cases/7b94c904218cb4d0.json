{"uid":"7b94c904218cb4d0","name":"test_one_failed_step","fullName":"test_allure_section#test_one_failed_step","historyId":"865cda5a83e56d971f611be8c12531eb","time":{"start":1706461373897,"stop":1706461373898,"duration":1},"status":"failed","statusMessage":"AssertionError: Error during CAN Validating","statusTrace":"def test_one_failed_step():\n        with allure_section(\"Validate Electrical Power System activation\") as section:\n            with section.step(\"Validate Control Msg was sent\"):\n                raise AssertionError(\"Error during CAN Validating\")\n            with section.step(\"Validate Pin State is On\"):\n                pass\n            with section.step(\"Validate Consumer reaction\"):\n>               pass\n\ntest_allure_section.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <allure_section._allure_section.SectionContext object at 0x10875a370>\nexc_type = <class 'AssertionError'>\nexc_val = AssertionError('Error during CAN Validating')\nexc_tb = <traceback object at 0x1087a1100>\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        \"\"\"Exit from the section context\"\"\"\n        if self._exceptions:\n            if len(self._exceptions) == 1:\n                exception = self._exceptions[0]\n                exc_type = type(exception)\n                exc_val = exception\n                exc_tb = exception.__traceback__\n            elif self._exc_type in [type(e) for e in self._exceptions]:\n                exc_type = self._exc_type\n                exc_val = MultipleErrors(self._exceptions)\n                exc_tb = MultipleErrors(self._exceptions).__traceback__\n            else:\n                exc_type = Exception\n                exc_val = MultipleExceptions(self._exceptions)\n                exc_tb = MultipleExceptions(self._exceptions).__traceback__\n    \n        plugin_manager.hook.stop_step(uuid=self.uuid, title=self.title, exc_type=exc_type, exc_val=exc_val,\n                                      exc_tb=exc_tb)\n        if exc_type:\n>           raise exc_type(exc_val)\nE           AssertionError: Error during CAN Validating\n\n../../allure_section/_allure_section.py:105: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AssertionError: Error during CAN Validating","statusTrace":"def test_one_failed_step():\n        with allure_section(\"Validate Electrical Power System activation\") as section:\n            with section.step(\"Validate Control Msg was sent\"):\n                raise AssertionError(\"Error during CAN Validating\")\n            with section.step(\"Validate Pin State is On\"):\n                pass\n            with section.step(\"Validate Consumer reaction\"):\n>               pass\n\ntest_allure_section.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <allure_section._allure_section.SectionContext object at 0x10875a370>\nexc_type = <class 'AssertionError'>\nexc_val = AssertionError('Error during CAN Validating')\nexc_tb = <traceback object at 0x1087a1100>\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        \"\"\"Exit from the section context\"\"\"\n        if self._exceptions:\n            if len(self._exceptions) == 1:\n                exception = self._exceptions[0]\n                exc_type = type(exception)\n                exc_val = exception\n                exc_tb = exception.__traceback__\n            elif self._exc_type in [type(e) for e in self._exceptions]:\n                exc_type = self._exc_type\n                exc_val = MultipleErrors(self._exceptions)\n                exc_tb = MultipleErrors(self._exceptions).__traceback__\n            else:\n                exc_type = Exception\n                exc_val = MultipleExceptions(self._exceptions)\n                exc_tb = MultipleExceptions(self._exceptions).__traceback__\n    \n        plugin_manager.hook.stop_step(uuid=self.uuid, title=self.title, exc_type=exc_type, exc_val=exc_val,\n                                      exc_tb=exc_tb)\n        if exc_type:\n>           raise exc_type(exc_val)\nE           AssertionError: Error during CAN Validating\n\n../../allure_section/_allure_section.py:105: AssertionError","steps":[{"name":"Validate Electrical Power System activation","time":{"start":1706461373898,"stop":1706461373898,"duration":0},"status":"failed","statusMessage":"AssertionError: Error during CAN Validating\n","statusTrace":"  File \"/Users/timofeev/PycharmProjects/allure_section/allure_section/_allure_section.py\", line 116, in step\n    yield\n  File \"/Users/timofeev/PycharmProjects/allure_section/examples/test_example/test_allure_section.py\", line 27, in test_one_failed_step\n    raise AssertionError(\"Error during CAN Validating\")\n","steps":[{"name":"Validate Control Msg was sent","time":{"start":1706461373898,"stop":1706461373898,"duration":0},"status":"failed","statusMessage":"AssertionError: Error during CAN Validating\n","statusTrace":"  File \"/Users/timofeev/PycharmProjects/allure_section/allure_section/_allure_section.py\", line 116, in step\n    yield\n  File \"/Users/timofeev/PycharmProjects/allure_section/examples/test_example/test_allure_section.py\", line 27, in test_one_failed_step\n    raise AssertionError(\"Error during CAN Validating\")\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true},{"name":"Validate Pin State is On","time":{"start":1706461373898,"stop":1706461373898,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Validate Consumer reaction","time":{"start":1706461373898,"stop":1706461373898,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":3,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"suite","value":"test_allure_section"},{"name":"host","value":"MacBook-Pro-Alexander.local"},{"name":"thread","value":"53877-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_allure_section"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"7b94c904218cb4d0.json","parameterValues":[]}